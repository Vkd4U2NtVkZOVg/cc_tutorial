// Generated by commsdsl2comms v3.3.1

/// @file
/// @brief Contains definition of protocol default options for bare-metal application
///    where usage of dynamic memory allocation is disabled.

#pragma once

#ifndef DEFAULT_SEQ_FIXED_STORAGE_SIZE
/// @brief Define default fixed size for various sequence fields
/// @details May be defined during compile time to change the default value.
#define DEFAULT_SEQ_FIXED_STORAGE_SIZE 32
#endif

namespace tutorial2
{

namespace options
{

/// @brief Default options for bare-metal application where usage of dynamic
///    memory allocation is diabled.
struct BareMetalDefaultOptions
{
    /// @brief Extra options for fields.
    struct field
    {
        /// @brief Extra options for all the member fields of
        ///     @ref tutorial2::field::B8_1 bundle.
        struct B8_1Members
        {
            /// @brief Extra options for @ref
            ///     tutorial2::field::B8_1Members::M3 field.
            using M3 = comms::option::app::SequenceFixedSizeUseFixedSizeStorage;
            
        };
        
        /// @brief Extra options for all the member fields of
        ///     @ref tutorial2::field::B8_2 bundle.
        struct B8_2Members
        {
            /// @brief Extra options for @ref
            ///     tutorial2::field::B8_2Members::M3 field.
            using M3 = comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>;
            
        };
        
        /// @brief Extra options for @ref
        ///     tutorial2::field::D7_1 field.
        using D7_1 = comms::option::app::SequenceFixedSizeUseFixedSizeStorage;
        
        /// @brief Extra options for @ref
        ///     tutorial2::field::D7_2 field.
        using D7_2 = comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>;
        
        /// @brief Extra options for @ref
        ///     tutorial2::field::S6_1 field.
        using S6_1 = comms::option::app::SequenceFixedSizeUseFixedSizeStorage;
        
        /// @brief Extra options for @ref
        ///     tutorial2::field::S6_2 field.
        using S6_2 = comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>;
        
        /// @brief Extra options for @ref
        ///     tutorial2::field::S6_3 field.
        using S6_3 = comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>;
        
        /// @brief Extra options for @ref
        ///     tutorial2::field::S6_4 field.
        using S6_4 = comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>;
        
    }; // struct field
    
    /// @brief Extra options for messages.
    struct message
    {
        /// @brief Extra options for fields of
        ///     @ref tutorial2::message::Msg6 message.
        struct Msg6Fields
        {
            /// @brief Extra options for @ref
            ///     tutorial2::message::Msg6Fields::F5
            ///     field.
            using F5 = comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>;
            
        }; // struct Msg6Fields
        
        
        /// @brief Extra options for fields of
        ///     @ref tutorial2::message::Msg7 message.
        struct Msg7Fields
        {
            /// @brief Extra options for @ref
            ///     tutorial2::message::Msg7Fields::F3
            ///     field.
            using F3 = comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE>;
            
        }; // struct Msg7Fields
        
        
    }; // struct message
    
    /// @brief Extra options for frames.
    struct frame
    {
        /// @brief Extra options for Layers of
        ///     @ref tutorial2::frame::Frame frame.
        struct FrameLayers
        {
            /// @brief Extra options for @ref
            ///     tutorial2::frame::FrameLayers::Data
            ///     layer.
            using Data = comms::option::app::FixedSizeStorage<DEFAULT_SEQ_FIXED_STORAGE_SIZE * 8>;
            
            /// @brief Extra options for @ref
            ///     tutorial2::frame::FrameLayers::ID layer.
            using ID = comms::option::app::InPlaceAllocation;
            
        }; // struct FrameLayers
        
    }; // struct frame
    
    
};

} // namespace options

} // namespace tutorial2


